#! /bin/sh
#
# Start the RMM  Websockify daemon
#
### BEGIN INIT INFO
# Provides: sawatchdog
# Required-Start: 
# Required-Stop: 
# Default-Start:  3 4 5
# Default-Stop:   0 1 2 6
# Short-Description: RMM  websockify service
# Description:    RMM  websockify service
### END INIT INFO
# Return values acc. to LSB for all commands but status:
# 0       - success
# 1       - generic or unspecified error
# 2       - invalid or excess argument(s)
# 3       - unimplemented feature (e.g. "reload")
# 4       - user had insufficient privileges
# 5       - program is not installed
# 6       - program is not configured
# 7       - program is not running
# 8--199  - reserved (8--99 LSB, 100--149 distrib, 150--199 appl)
# 
# Note that starting an already running service, stopping
# or restarting a not-running service as well as the restart
# with force-reload (in case signaling is not supported) are
# considered a success.

# be extra carefull cause connection fail if TMPDIR is not writeable
export TMPDIR="/tmp"

. /etc/rc.d/init.d/functions

SAAGENT_CONF="/usr/local/AgentService/agent_config.xml"
SAWEBSOCKIFY_BIN="/usr/local/AgentService/VNC/websockify"
SAWEBSOCKIFY_LOCK="/var/lock/subsys/websockify"

RETVAL=0

# Check for missing binary
if [ ! -x ${SAWEBSOCKIFY_BIN} ]; then
	echo -n 1>&2 "RMM  Websockify daemon , \"${SAWEBSOCKIFY_BIN}\" is not installed."
	echo_failure
	echo 
	exit 5
fi

# Get VNC server port
if [ -f ${SAAGENT_CONF} ]; then
	VNC_PORT=$(sed -n 's:.*<CustVNCPort>\(.*\)</CustVNCPort>.*:\1:p' ${SAAGENT_CONF})
else
	VNC_PORT="5900"
	echo -n 1>&2 "RMM  Websockify daemon , \"${SAAGENT_CONF}\" is not exist."
	echo_failure
	echo 
	exit 5
fi


case "$1" in
	start)
		#check configure file
		if [ ! -f ${SAAGENT_CONF} ]; then
			echo -n >&2 "RMM  Websockify configuration file, ${SAWEBSOCKIFY_CONF} does not exist. "
			echo_failure
			echo 
			exit 6
		fi
		#action
		if [ -f ${SAWEBSOCKIFY_LOCK} ]; then						
			echo -n "RMM  Websockifyalready daemon running."
			echo_warning
			echo 
			exit 1
		else 
			echo -n "Starting RMM  Websockify daemon..."
			##daemon "${SAAGENT_BIN}"
			${SAWEBSOCKIFY_BIN} "--daemon" "6081" "localhost:${VNC_PORT}" 1>/dev/null 2>/dev/null
			RETVAL=$?
			[ $RETVAL -eq 0 ] && touch ${SAWEBSOCKIFY_LOCK} && echo_success || echo_failure
			echo
		fi
		;;
		
	stop)
		#check service status
		if [ -f ${SAWEBSOCKIFY_LOCK} ]; then
			echo -n "Shutting down RMM  Websockify daemon ..."		
			killproc "${SAWEBSOCKIFY_BIN}"		
			RETVAL=$?
			[ $RETVAL -eq 0 ] && rm -f ${SAWEBSOCKIFY_LOCK} && echo_success || echo_failure
			echo
		else
			echo -n "RMM  Websockify daemon is not running."
			echo_warning
			echo 
			exit 1
		fi
		;;		

	restart)
		$0 stop
		$0 start
		;;

	status)
		status sawebsockify
        RETVAL=$?
		;;
		
	condrestart)
		if [ -f ${SAWEBSOCKIFY_LOCK} ]; then
			$0 restart
		fi
		;;
	*)
		echo "Usage: $0 {start|stop|status|restart|condrestart}"
		exit 1
		;;
esac
exit $RETVAL

